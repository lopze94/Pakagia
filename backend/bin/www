#!/usr/bin/env node

/**
 * Module dependencies.
 */

const app = require('../app');
const debug = require('debug')('pakaya:server');
const http = require('http');

/**
 * Get port from environment and store in Express.
 */

const port = process.env.PORT || '8080';
app.set('port', port);

/**
 * Create HTTP server.
 */

const server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.on('error', onError);
server.on('listening', ()=>debug('Listening on port ' + port));
server.listen(port);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  console.log('HTTP Server Error');

  // Only handle errors associated with listening on a port
  if (error.syscall !== 'listen')
    throw error;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(`Port ${port} requires elevated privileges`);
      return process.exit(1);
    case 'EADDRINUSE':
      console.error(`Port ${port} is already in use`);
      return process.exit(1);
    default:
      throw error;
  }
}
